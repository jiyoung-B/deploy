name: deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'corretto'
#
#      - name: Grant execute permission to gradlew
#        run: chmod +x gradlew
#
#      - name: Build Spring Boot application
#        run: ./gradlew build -x test


      - name: Make application.properties
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES }}" > ./application.properties
        shell: bash

      #
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Remove existing Docker image
        run: |
          docker image rm -f redis ${{ secrets.DOCKER_IMAGE_NAME }} || true

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_IMAGE_NAME }} .
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}

      - name: Deploy application to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # EC2 인스턴스에 .env 파일 내용 직접 생성
            ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "echo 'SPRING_DATASOURCE_URL=jdbc:mysql://${{ secrets.RDS_HOST }}:3306/weather' > /home/ubuntu/.env"
            ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "echo 'SPRING_DATASOURCE_USERNAME=${{ secrets.RDS_USERNAME }}' >> /home/ubuntu/.env"
            ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "echo 'SPRING_DATASOURCE_PASSWORD=${{ secrets.RDS_PASSWORD }}' >> /home/ubuntu/.env"
            # docker-compose.yml 파일 복사 및 컨테이너 시작
            scp -o StrictHostKeyChecking=no ./docker-compose.yml ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/
            ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "cd /home/ubuntu/ && sudo docker-compose up -d"